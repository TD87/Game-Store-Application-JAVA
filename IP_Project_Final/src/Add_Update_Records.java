import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tejas
 */

public class Add_Update_Records extends javax.swing.JFrame {

    /**
     * Creates new form add_delete_update
     */
    public Add_Update_Records() {
        initComponents();
        clrbtn.doClick();
        PopulateScreen();
        this.getContentPane().setBackground(Color.BLACK);
    }
    
    public void PopulateScreen() {
        if (DBApplication.sno == null) 
        {
            gametxt.setText(null);
            studiotxt.setText(null);
            genretxt.setText(null);
            yeartxt.setText(null);
            pricetxt.setText(null);
            xbcb.setSelected(false);
            pscb.setSelected(false);
            pccb.setSelected(false);
            gametxt.requestFocus();
            
            // User is trying to perform an Add operation so hide
            // the Update Btn and shown Add Btn
            updatebtn.setVisible(false);
            addbtn.setVisible(true);
            this.setTitle("Game Store - Add Game");
        }
        else
        {
            // User is trying to perform an Update operation so hide
            // Add Btn and shown Update Btn
            updatebtn.setVisible(true);
            addbtn.setVisible(false);
            this.setTitle("Game Store - Update Game");
            
            try
            {                
                String query = "Select * from games natural join platforms "
                        + "where sno = " + DBApplication.sno + ";";
                
                Connection con = DriverManager.getConnection(
                        "jdbc:mysql://localhost/ipproject", "root", "oakridge");
                Statement stmt=con.createStatement();               
                ResultSet rs=stmt.executeQuery(query);
                
                while (rs.next()) 
                {
                    gametxt.setText(rs.getString("Game_Name"));
                    studiotxt.setText(rs.getString("Studio"));
                    genretxt.setText(rs.getString("Genre"));
                    yeartxt.setText(rs.getString("Release_Year"));
                    pricetxt.setText(rs.getString("Price"));
                    String eight = rs.getString("Xbox_one");
                    String nine = rs.getString("PS4");
                    String ten = rs.getString("PC");
                    
                    if(eight.equals("Y"))
                        xbcb.setSelected(true);
                    else
                        xbcb.setSelected(false);
                    if(nine.equals("Y"))
                        pscb.setSelected(true);
                    else
                        pscb.setSelected(false);
                    if(ten.equals("Y"))
                        pccb.setSelected(true);
                    else
                        pccb.setSelected(false);
                }  
                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e)
            {
                jOptionPane1.showMessageDialog(this,"Error in table Deletion");
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        gametxt = new javax.swing.JTextField();
        studiotxt = new javax.swing.JTextField();
        genretxt = new javax.swing.JTextField();
        yeartxt = new javax.swing.JTextField();
        pricetxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        xbcb = new javax.swing.JCheckBox();
        pscb = new javax.swing.JCheckBox();
        pccb = new javax.swing.JCheckBox();
        addbtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        clrbtn = new javax.swing.JButton();
        returnbtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gametxt.setBackground(new java.awt.Color(204, 0, 0));
        gametxt.setForeground(new java.awt.Color(255, 255, 255));
        gametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gametxtActionPerformed(evt);
            }
        });
        getContentPane().add(gametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 160, 30));

        studiotxt.setBackground(new java.awt.Color(204, 0, 0));
        studiotxt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(studiotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 160, 30));

        genretxt.setBackground(new java.awt.Color(204, 0, 0));
        genretxt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(genretxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 160, 30));

        yeartxt.setBackground(new java.awt.Color(204, 0, 0));
        yeartxt.setForeground(new java.awt.Color(255, 255, 255));
        yeartxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yeartxtActionPerformed(evt);
            }
        });
        getContentPane().add(yeartxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 160, 30));

        pricetxt.setBackground(new java.awt.Color(204, 0, 0));
        pricetxt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(pricetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 160, 30));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Price");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, -1, -1));

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Year of Release");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Genre");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, -1, -1));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Studio");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, -1));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Game Name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        jPanel1.setBackground(new java.awt.Color(204, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Platforms", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        xbcb.setBackground(new java.awt.Color(204, 0, 0));
        xbcb.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        xbcb.setForeground(new java.awt.Color(255, 255, 255));
        xbcb.setText("Xbox One");
        jPanel1.add(xbcb, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        pscb.setBackground(new java.awt.Color(204, 0, 0));
        pscb.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        pscb.setForeground(new java.awt.Color(255, 255, 255));
        pscb.setText("PS4");
        jPanel1.add(pscb, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        pccb.setBackground(new java.awt.Color(204, 0, 0));
        pccb.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        pccb.setForeground(new java.awt.Color(255, 255, 255));
        pccb.setText("PC");
        jPanel1.add(pccb, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 230, 190));

        addbtn.setBackground(new java.awt.Color(204, 0, 0));
        addbtn.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        addbtn.setForeground(new java.awt.Color(255, 255, 255));
        addbtn.setText("Add Game");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        getContentPane().add(addbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 300, 180, 50));

        updatebtn.setBackground(new java.awt.Color(204, 0, 0));
        updatebtn.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(255, 255, 255));
        updatebtn.setText("Update Game");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });
        getContentPane().add(updatebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, -1, 50));

        clrbtn.setBackground(new java.awt.Color(204, 0, 0));
        clrbtn.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        clrbtn.setForeground(new java.awt.Color(255, 255, 255));
        clrbtn.setText("Clear");
        clrbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrbtnActionPerformed(evt);
            }
        });
        getContentPane().add(clrbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 300, 180, 50));

        returnbtn.setBackground(new java.awt.Color(204, 0, 0));
        returnbtn.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        returnbtn.setForeground(new java.awt.Color(255, 255, 255));
        returnbtn.setText("Return");
        returnbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnbtnActionPerformed(evt);
            }
        });
        getContentPane().add(returnbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 380, 150, 50));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 590, 10));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 440, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gametxtActionPerformed

    private void yeartxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yeartxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yeartxtActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
    try
    {
       String gname = gametxt.getText();
       String studio = studiotxt.getText(); 
       String genre = genretxt.getText(); 
       String year = yeartxt.getText(); 
       String price = pricetxt.getText();
       String query;
       
       // Let's check to make sure none of the fields are left empty by the user
       if (gname.equals("") || studio.equals("") || genre.equals("") || 
               year.equals("") || price.equals("")){
           jOptionPane1.showMessageDialog(this,"Please do not leave any field"
                   + " empty for update to succeed");
           return;
       }
       
       Class.forName("java.sql.Driver");
       Connection con=DriverManager.getConnection(
               "jdbc:mysql://localhost/ipproject","root","oakridge");
       Statement stmt = con.createStatement();
       
       if(xbcb.isSelected() == true){
           if(pscb.isSelected() == true){
               if(pccb.isSelected() == true)
                   query = "update games set Platform_Type = \"ALL\" "
                           + "where sno = " + DBApplication.sno + ";";
               else
                   query = "update games set Platform_Type = \"XBPS\" "
                           + "where sno = " + DBApplication.sno + ";";
           }
           else{
               if(pccb.isSelected() == true)
                   query = "update games set Platform_Type = \"XBPC\" "
                           + "where sno = " + DBApplication.sno + ";";
               else
                   query = "update games set Platform_Type = \"XBE\" "
                           + "where sno = " + DBApplication.sno + ";"; 
           }
       }
       else{
        if(pscb.isSelected() == true){
               if(pccb.isSelected() == true)
                   query = "update games set Platform_Type = \"PSPC\" "
                           + "where sno = " + DBApplication.sno + ";";
               else
                   query = "update games set Platform_Type = \"PSE\" "
                           + "where sno = " + DBApplication.sno + ";";
           }
           else{
               if(pccb.isSelected() == true)
                   query = "update games set Platform_Type = \"PCE\" "
                           + "where sno = " + DBApplication.sno + ";";
               else{
                   jOptionPane1.showMessageDialog(this,"Do not leave Platform "
                           + "field empty for update to succeed");
                   return;
               }
           }
       }
       stmt.executeUpdate(query);
       
       query = "update games set Game_Name = \"" + gname + "\" where "
               + "sno = " + DBApplication.sno + ";";
       stmt.executeUpdate(query);

       query = "update games set Studio = \"" + studio + "\" where "
               + "sno = " + DBApplication.sno + ";";
       stmt.executeUpdate(query);

       query = "update games set Genre = \"" + genre + "\" where "
               + "sno = " + DBApplication.sno + ";";
       stmt.executeUpdate(query);

       query = "update games set Release_Year = " + year + " where "
               + "sno = " + DBApplication.sno + ";";
       stmt.executeUpdate(query);

       query = "update games set Price = " + price + " where "
               + "sno = " + DBApplication.sno + ";";
       stmt.executeUpdate(query);

       jOptionPane1.showMessageDialog(this,"Record Successfully Updated");
    }
    catch(Exception e){
      jOptionPane1.showMessageDialog(this,"Error in updating record");
    }
    }//GEN-LAST:event_updatebtnActionPerformed

    private void clrbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrbtnActionPerformed
        gametxt.setText(null);
        studiotxt.setText(null);
        genretxt.setText(null);
        yeartxt.setText(null);
        pricetxt.setText(null);
        xbcb.setSelected(false);
        pscb.setSelected(false);
        pccb.setSelected(false);
        gametxt.requestFocus();
    }//GEN-LAST:event_clrbtnActionPerformed

    private void returnbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnbtnActionPerformed
        if (DBApplication.searchDB == null)
                DBApplication.searchDB = new Search_Add_Update();
        
        DBApplication.searchDB.doSearch();
        DBApplication.searchDB.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_returnbtnActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
    try
    {
       Class.forName("java.sql.Driver");
       Connection con=DriverManager.getConnection(
               "jdbc:mysql://localhost/ipproject","root","oakridge");
       Statement stmt = con.createStatement();
       
       String sql = "select max(Sno)+1 from games;";
       ResultSet rs = stmt.executeQuery(sql);
       rs.next();
       String str = rs.getString("max(Sno)+1");
       
       String gname = gametxt.getText();
       String studio = studiotxt.getText();
       String genre = genretxt.getText();
       String year = yeartxt.getText();
       String price = pricetxt.getText();
       String platform = "";
       
       if(xbcb.isSelected() == true){
           if(pscb.isSelected() == true){
               if(pccb.isSelected() == true)
                   platform = "ALL";
               else
                   platform = "XBPS";
           }
           else{
               if(pccb.isSelected() == true)
                   platform = "XBPC";
               else
                   platform = "XBE";
           }
       } else {
            if(pscb.isSelected() == true){
               if(pccb.isSelected() == true)
                   platform = "PSPC";
               else
                   platform = "PSE";
           } else {
               if(pccb.isSelected() == true)
                   platform = "PCE";
               else
                   platform = "ALL";
           }
       }
       
       String query = "insert into games values (" + str + ", \"" + gname + 
               "\", \"" + studio + "\", \"" + genre + "\", " + year + ", " + 
               price + " , \"" + platform + "\");";
       stmt.executeUpdate(query);
      jOptionPane1.showMessageDialog(this,"Record successfully added");
    }
    catch(Exception e){
      jOptionPane1.showMessageDialog(this,"Error in adding record");
    }
    }//GEN-LAST:event_addbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Update_Records.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Update_Records.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Update_Records.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Update_Records.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_Update_Records().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JButton clrbtn;
    private javax.swing.JTextField gametxt;
    private javax.swing.JTextField genretxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JCheckBox pccb;
    private javax.swing.JTextField pricetxt;
    private javax.swing.JCheckBox pscb;
    private javax.swing.JButton returnbtn;
    private javax.swing.JTextField studiotxt;
    private javax.swing.JButton updatebtn;
    private javax.swing.JCheckBox xbcb;
    private javax.swing.JTextField yeartxt;
    // End of variables declaration//GEN-END:variables
}
