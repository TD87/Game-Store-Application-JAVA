
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tejas
 */
public class Search_Add_Update extends javax.swing.JFrame {

    /**
     * Creates new form search
     */
    public Search_Add_Update() {
        initComponents();
        searchdb.getTableHeader().setFont(new java.awt.Font("Calibri", 1, 14));
        this.setTitle("Game Store - Add/Update/Delete Records");
        this.getContentPane().setBackground(Color.BLACK);
    }
    
    public void doSearch() {
        searchbtn.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchdb = new javax.swing.JTable();
        returnbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        gametxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        studiotxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        genretxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        yeartxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lpricetxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        hpricetxt = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        xbcb = new javax.swing.JCheckBox();
        pscb = new javax.swing.JCheckBox();
        pccb = new javax.swing.JCheckBox();
        searchbtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        Update = new javax.swing.JButton();
        AddGame = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchdb.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        searchdb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.No", "Game Name", "Studio", "Genre", "Year of Release", "Price", "Platform Type", "Xbox One", "PS4", "PC", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(searchdb);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 990, 290));

        returnbtn.setBackground(new java.awt.Color(204, 0, 0));
        returnbtn.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        returnbtn.setForeground(new java.awt.Color(255, 255, 255));
        returnbtn.setText("Return To Main Menu");
        returnbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnbtnActionPerformed(evt);
            }
        });
        getContentPane().add(returnbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 680, 260, 60));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Game Name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        gametxt.setBackground(new java.awt.Color(204, 0, 0));
        gametxt.setForeground(new java.awt.Color(255, 255, 255));
        gametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gametxtActionPerformed(evt);
            }
        });
        getContentPane().add(gametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 70, -1));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Studio");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, -1));

        studiotxt.setBackground(new java.awt.Color(204, 0, 0));
        studiotxt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(studiotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 70, -1));

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Genre");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, -1, -1));

        genretxt.setBackground(new java.awt.Color(204, 0, 0));
        genretxt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(genretxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 70, -1));

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Year of Release");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, -1, -1));

        yeartxt.setBackground(new java.awt.Color(204, 0, 0));
        yeartxt.setForeground(new java.awt.Color(255, 255, 255));
        yeartxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yeartxtActionPerformed(evt);
            }
        });
        getContentPane().add(yeartxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 70, -1));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Price in between");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, -1, -1));

        lpricetxt.setBackground(new java.awt.Color(204, 0, 0));
        lpricetxt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lpricetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 70, -1));

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("to");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 130, -1, -1));

        hpricetxt.setBackground(new java.awt.Color(204, 0, 0));
        hpricetxt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(hpricetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 70, -1));

        jPanel1.setBackground(new java.awt.Color(204, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Platforms", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jPanel1.setName("Platforms"); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        xbcb.setBackground(new java.awt.Color(204, 0, 0));
        xbcb.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        xbcb.setForeground(new java.awt.Color(255, 255, 255));
        xbcb.setText("Xbox One");
        jPanel1.add(xbcb, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        pscb.setBackground(new java.awt.Color(204, 0, 0));
        pscb.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        pscb.setForeground(new java.awt.Color(255, 255, 255));
        pscb.setText("PS4");
        jPanel1.add(pscb, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        pccb.setBackground(new java.awt.Color(204, 0, 0));
        pccb.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        pccb.setForeground(new java.awt.Color(255, 255, 255));
        pccb.setText("PC");
        jPanel1.add(pccb, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 150, 130));

        searchbtn.setBackground(new java.awt.Color(204, 0, 0));
        searchbtn.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        searchbtn.setForeground(new java.awt.Color(255, 255, 255));
        searchbtn.setText("Search Records");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });
        getContentPane().add(searchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 40, 260, 60));

        clearBtn.setBackground(new java.awt.Color(204, 0, 0));
        clearBtn.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        getContentPane().add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 120, 260, 50));

        deletebtn.setBackground(new java.awt.Color(204, 0, 0));
        deletebtn.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        deletebtn.setText("Delete Game(s)");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });
        getContentPane().add(deletebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 550, 260, 60));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 648, 1010, -1));

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("Search Criteria:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        Update.setBackground(new java.awt.Color(204, 0, 0));
        Update.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        Update.setForeground(new java.awt.Color(255, 255, 255));
        Update.setText("Update Game");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 550, 260, 60));

        AddGame.setBackground(new java.awt.Color(204, 0, 0));
        AddGame.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        AddGame.setForeground(new java.awt.Color(255, 255, 255));
        AddGame.setText("Add Game");
        AddGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddGameActionPerformed(evt);
            }
        });
        getContentPane().add(AddGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 550, 260, 60));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 1010, 10));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 750, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void clear()
    {
        try {
            this.clearBtn.doClick();
        } catch (Exception ex) {
        }
    }
    private void returnbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnbtnActionPerformed
        if (DBApplication.mainScreen == null)
            DBApplication.mainScreen = new Main_Menu();
        
        DBApplication.mainScreen.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_returnbtnActionPerformed

    private void yeartxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yeartxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yeartxtActionPerformed

    private void gametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gametxtActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        try 
        {
            DefaultTableModel model = (DefaultTableModel) searchdb.getModel();
            model.setRowCount(0);
            Class.forName("java.sql.Driver");
            try 
            {
                Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost/ipproject", "root", "oakridge");
                Statement stmt=con.createStatement();
                
                String gname = gametxt.getText();
                if(gname.equals(""))
                    gname = "in (Game_Name)";
                else
                    gname = "=" + "'" + gametxt.getText() + "'";
                
                String studio = studiotxt.getText();
                if(studio.equals(""))
                    studio = "in (Studio)";
                else
                    studio = "=" + "'" + studiotxt.getText() + "'";
                
                String genre = genretxt.getText();
                if(genre.equals(""))
                    genre = "in (Genre)";
                else
                    genre = "=" + "'" + genretxt.getText()+ "'";
                
                String year = yeartxt.getText();
                if(year.equals(""))
                    year = "in (Release_Year)";
                else
                    year = "=" + yeartxt.getText();
                
                String lprice = lpricetxt.getText();
                if(lprice.equals(""))
                    lprice = "in ";
                else
                    lprice = "between " + lpricetxt.getText();
                
                String hprice = hpricetxt.getText();
                if(hprice.equals(""))
                    hprice = "(Price)";
                else
                    hprice = " and " + hpricetxt.getText();
                
                String platform = "";
                if(xbcb.isSelected() == true){
                    if(pscb.isSelected() == true){
                        if(pccb.isSelected() == true){
                           platform = "= \"ALL\"";
                        }
                        else{
                           platform = "= \"XBPS\"";
                       }
                    }
                    else{
                        if(pccb.isSelected() == true){
                           platform = "= \"XBPC\"";
                        }
                        else{
                           platform = "= \"XBE\"";
                        }
                    }
                }
                else{
                if(pscb.isSelected() == true){
                        if(pccb.isSelected() == true){
                           platform = "= \"PSPC\"";
                        }
                        else{
                           platform = "= \"PSE\"";
                        }
                    }
                    else{
                        if(pccb.isSelected() == true){
                           platform = "= \"PCE\"";
                        }
                        else{
                           platform = "in (Platform_Type)";
                        }
                    }
                }
                
                String query = "Select * from games natural join platforms where"
                        + " Game_Name " + gname + " and Studio " + studio + 
                        " and Genre " + genre + " and Release_Year " + year + 
                        " and games.Platform_Type " + platform + " and Price " +
                        lprice + hprice + " order by sno;";
                
                ResultSet rs=stmt.executeQuery(query);
                while (rs.next()) 
                {
                    String one = rs.getString("Sno");
                    String two = rs.getString("Game_Name");
                    String three = rs.getString("Studio");
                    String four = rs.getString("Genre");
                    String five = rs.getString("Release_Year");
                    String six = rs.getString("Price");
                    String seven = rs.getString("Platform_Type");
                    String eight = rs.getString("Xbox_one");
                    String nine = rs.getString("PS4");
                    String ten = rs.getString("PC");
                    model.addRow(new Object[] {one, two, three, four, five, 
                        six, seven, eight, nine, ten});
                }  
                rs.close();
                stmt.close();
                con.close();
            } 
            catch (SQLException ex) 
            {
                Logger.getLogger(
                    Search_Add_Update.class.getName()).log(Level.SEVERE, 
                    null, ex);
                jOptionPane1.showMessageDialog(this, "No records found.");
            }
        } 
        catch (ClassNotFoundException ex) 
        {
            Logger.getLogger(Search_Add_Update.class.getName()).log(Level.SEVERE,
                    null, ex);
            jOptionPane1.showMessageDialog(this, "No records found.");
        }

    }//GEN-LAST:event_searchbtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        gametxt.setText(null);
        studiotxt.setText(null);
        genretxt.setText(null);
        yeartxt.setText(null);
        hpricetxt.setText(null);
        lpricetxt.setText(null);
        xbcb.setSelected(false);
        pscb.setSelected(false);
        pccb.setSelected(false);

        DefaultTableModel model = (DefaultTableModel) searchdb.getModel();
        model.setRowCount(0);

        gametxt.requestFocus();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void deleteRecord(String sno) {
        try
        {
           Class.forName("java.sql.Driver");
           Connection con=DriverManager.getConnection(
                   "jdbc:mysql://localhost/ipproject","root","oakridge");
           Statement stmt = con.createStatement();

           String query = "delete from games where Sno = \"" + sno + "\" ;";
           stmt.executeUpdate(query);
          
        }
        catch(Exception e){
          jOptionPane1.showMessageDialog(this,"Error in table Deletion");
        }
    }
    
    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        DefaultTableModel model = (DefaultTableModel)searchdb.getModel();
        int rowCount = model.getRowCount();
        boolean atleastOne = false;
        
        if (rowCount >0) {
            for(int i = 0; i < rowCount; i++) {
                Object isChecked = model.getValueAt(i, 10);
                if (isChecked != null && (boolean)isChecked == true) {
                    if (atleastOne == false) {
                        int res = JOptionPane.showConfirmDialog(this,
                                "Are you sure you want to delete records?");
                        if (res != JOptionPane.YES_OPTION)
                            break;
                    }
                    String tmp = (String)model.getValueAt(i, 0);
                    deleteRecord(tmp);
                    atleastOne = true;
                }
            }
            if (atleastOne) {
                // Refresh the table grid so that the user can see
                // the deleted records have gone away
                searchbtn.doClick();
                
                // display message to tell the user that one or more records
                // have been successfully deleted
                jOptionPane1.showMessageDialog(this,
                        "Record(s) successfully deleted");
            }
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        DefaultTableModel model = (DefaultTableModel)searchdb.getModel();
        int checked = 0;
        int rowToUpdate = 0;
        int rowCount = model.getRowCount();

        for(int i = 0; i < rowCount; i++) {
            Object isChecked = model.getValueAt(i, 10);
            if (isChecked != null && (boolean)isChecked == true) {
                checked++;
                rowToUpdate = i;
                if (checked > 1) {
                    // Show message to the user that they can update
                    // only one record at a time
                    jOptionPane1.showMessageDialog(this,
                        "Please select only one record for update purpose");
                    return;
                }
            }
        }

        // if no rows are present or no rows are selected, simply return
        if (checked == 0)
            return;

        // retrieve the S.No of the row selected by the user and set
        // the global SNo value to this retrieved value, so that we know
        // Add operation is being performed
        DBApplication.sno = (String)model.getValueAt(rowToUpdate, 0);

        // Imvoke the update screen
        if (DBApplication.addDeleteUpdate == null)
            DBApplication.addDeleteUpdate = new Add_Update_Records();

        DBApplication.addDeleteUpdate.PopulateScreen();
        DBApplication.addDeleteUpdate.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_UpdateActionPerformed

    private void AddGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddGameActionPerformed
        // Set the global SNo value to NULL, so that we know Add operation
        // is being performed
        DBApplication.sno = null;
        
        if (DBApplication.addDeleteUpdate == null)
                DBApplication.addDeleteUpdate = new Add_Update_Records();
        
        DBApplication.addDeleteUpdate.PopulateScreen();
        DBApplication.addDeleteUpdate.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_AddGameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search_Add_Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search_Add_Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search_Add_Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search_Add_Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search_Add_Update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddGame;
    private javax.swing.JButton Update;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deletebtn;
    private javax.swing.JTextField gametxt;
    private javax.swing.JTextField genretxt;
    private javax.swing.JTextField hpricetxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField lpricetxt;
    private javax.swing.JCheckBox pccb;
    private javax.swing.JCheckBox pscb;
    private javax.swing.JButton returnbtn;
    private javax.swing.JButton searchbtn;
    private javax.swing.JTable searchdb;
    private javax.swing.JTextField studiotxt;
    private javax.swing.JCheckBox xbcb;
    private javax.swing.JTextField yeartxt;
    // End of variables declaration//GEN-END:variables
}
